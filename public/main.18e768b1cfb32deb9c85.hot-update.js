/*! For license information please see main.18e768b1cfb32deb9c85.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js":(e,t,n)=>{var o=n("./node_modules/mini-css-extract-plugin/dist/hmr/normalize-url.js"),r=Object.create(null),i="undefined"==typeof document,a=Array.prototype.forEach;function c(){}function s(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(u(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var n=e.cloneNode();n.isLoaded=!1,n.addEventListener("load",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.addEventListener("error",(function(){n.isLoaded||(n.isLoaded=!0,e.parentNode.removeChild(e))})),n.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(n,e.nextSibling):e.parentNode.appendChild(n)}}function l(e){if(!e)return!1;var t=document.querySelectorAll("link"),n=!1;return a.call(t,(function(t){if(t.href){var r=function(e,t){var n;return e=o(e),t.some((function(o){e.indexOf(t)>-1&&(n=o)})),n}(t.href,e);u(r)&&!0!==t.visited&&r&&(s(t,r),n=!0)}})),n}function d(){var e=document.querySelectorAll("link");a.call(e,(function(e){!0!==e.visited&&s(e)}))}function u(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(i)return console.log("no window.document found, will not HMR CSS"),c;var n,a,s,u=function(e){var t=r[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var n=document.getElementsByTagName("script"),i=n[n.length-1];i&&(t=i.src)}r[e]=t}return function(e){if(!t)return null;var n=t.split(/([^\\/]+)\.js$/),r=n&&n[1];return r&&e?e.split(",").map((function(e){var n=new RegExp("".concat(r,"\\.js$"),"g");return o(t.replace(n,"".concat(e.replace(/{fileName}/g,r),".css")))})):[t.replace(".js",".css")]}}(e);return n=function(){var e=u(t.filename),n=l(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void d();n?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),d())},a=50,s=0,function(){var e=this,t=arguments;clearTimeout(s),s=setTimeout((function(){return n.apply(e,t)}),a)}}},"./node_modules/mini-css-extract-plugin/dist/hmr/normalize-url.js":e=>{e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",n=e.replace(new RegExp(t,"i"),"").split("/"),o=n[0].toLowerCase().replace(/\.$/,"");return n[0]="",t+o+n.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},"./styles/index.scss":(e,t,n)=>{var o,r;n.r(t),o=void 0,r=n("./node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js")(e.id,{publicPath:""}),e.hot.data&&e.hot.data.value&&e.hot.data.value!==o?e.hot.invalidate():e.hot.accept(),e.hot.dispose((function(e){e.value=o,r()}))}},(function(e){e.h=()=>"a40b0aa4c153a70b1899"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,